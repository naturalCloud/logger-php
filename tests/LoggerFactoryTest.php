<?php

namespace NaturalCloud\Logger\Test;

use NaturalCloud\Logger\Formatter\JsonFormatter;
use NaturalCloud\Logger\LoggerFactory;
use NaturalCloud\Logger\Processor\TraceIdProcessor;
use PHPUnit\Framework\TestCase;

class LoggerFactoryTest extends TestCase
{

    public function testConsole()
    {
        $config = require '../src/config/simple_logger.php';
        $factory = new LoggerFactory($config);
        $factory->get('console', 'console')->info('info...');
        $factory->get('console', 'console')->error('error...');
        $factory->get('console', 'console')->warning('warning...');
        $factory->get('console', 'console')->notice('notice...');
    }


    public function testJson()
    {
        $config = require '../src/config/simple_logger.php';
        $factory = new LoggerFactory($config);
        $factory->get('simple_json', 'json')->error('test simple_json... ');
    }

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        date_default_timezone_set('Asia/Shanghai');
    }


    public function testChannelFile()
    {
        $config = require '../src/config/simple_logger.php';
        $factory = new LoggerFactory($config);
        $log = $factory->channelFile('testChannelFile', [
            'handlers'   => [
                [
                    'class'       => \Monolog\Handler\StreamHandler::class,
                    'constructor' => [
                        'stream' => $config['storage_path'] . '/testChannelFile.log',
                        'level'  => \ Monolog\Logger::DEBUG,
                    ],
                    'formatter'   => [
                        'class'       => \Monolog\Formatter\LineFormatter::class,
                        'constructor' => [
                            'dateFormat' => 'Y-m-d H:i:s',
                        ],
                    ],
                ],
            ],
            'processors' => [
                [
                    'class'       => TraceIdProcessor::class,
                    'constructor' => [],
                ],
            ],
        ]);

        foreach ($log->getHandlers() as $handler) {
            var_dump($handler->getUrl());;
        }

        $log->info("testChannelFile");

        $factory->channelFile('testChannelFile222', [

            'handlers'   => [
                [
                    'class'       => \Monolog\Handler\StreamHandler::class,
                    'constructor' => [
                        'stream' => $config['storage_path'] . '/testChannelFile222.log',
                        'level'  => \Monolog\Logger::DEBUG,
                    ],
                    'formatter'   => [
                        'class'       => JsonFormatter::class,
                        'constructor' => [
                            'dateFormat' => 'Y-m-d H:i:s',
                        ],
                    ],
                ],
            ],
            'processors' => [
                [
                    'class'       => TraceIdProcessor::class,
                    'constructor' => [],
                ],
            ],

        ])->error('testChannelFile222');


        $factory->channelFile('fileEmpty')->info('fileEmpty...');
        $factory->channelFile('fileEmpty')->error('fileEmpty1233');
    }


}
